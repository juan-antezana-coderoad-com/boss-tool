/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.veea.bosstool.model.transactionLog;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StatusDetailsType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StatusDetailsType\",\"namespace\":\"avro.transactionLog\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"transactionStatusType\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"transactionStatusStatus\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"linkedTransactionLog\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"error\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"timestamp\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"emafS3Url\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public Long id;
  @Deprecated public Integer transactionStatusType;
  @Deprecated public Integer transactionStatusStatus;
  @Deprecated public Long linkedTransactionLog;
  @Deprecated public CharSequence error;
  @Deprecated public Long timestamp;
  @Deprecated public CharSequence emafS3Url;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public StatusDetailsType() {}

  /**
   * All-args constructor.
   */
  public StatusDetailsType(Long id, Integer transactionStatusType, Integer transactionStatusStatus, Long linkedTransactionLog, CharSequence error, Long timestamp, CharSequence emafS3Url) {
    this.id = id;
    this.transactionStatusType = transactionStatusType;
    this.transactionStatusStatus = transactionStatusStatus;
    this.linkedTransactionLog = linkedTransactionLog;
    this.error = error;
    this.timestamp = timestamp;
    this.emafS3Url = emafS3Url;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return transactionStatusType;
    case 2: return transactionStatusStatus;
    case 3: return linkedTransactionLog;
    case 4: return error;
    case 5: return timestamp;
    case 6: return emafS3Url;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: id = (Long)value$; break;
    case 1: transactionStatusType = (Integer)value$; break;
    case 2: transactionStatusStatus = (Integer)value$; break;
    case 3: linkedTransactionLog = (Long)value$; break;
    case 4: error = (CharSequence)value$; break;
    case 5: timestamp = (Long)value$; break;
    case 6: emafS3Url = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'transactionStatusType' field.
   */
  public Integer getTransactionStatusType() {
    return transactionStatusType;
  }

  /**
   * Sets the value of the 'transactionStatusType' field.
   * @param value the value to set.
   */
  public void setTransactionStatusType(Integer value) {
    this.transactionStatusType = value;
  }

  /**
   * Gets the value of the 'transactionStatusStatus' field.
   */
  public Integer getTransactionStatusStatus() {
    return transactionStatusStatus;
  }

  /**
   * Sets the value of the 'transactionStatusStatus' field.
   * @param value the value to set.
   */
  public void setTransactionStatusStatus(Integer value) {
    this.transactionStatusStatus = value;
  }

  /**
   * Gets the value of the 'linkedTransactionLog' field.
   */
  public Long getLinkedTransactionLog() {
    return linkedTransactionLog;
  }

  /**
   * Sets the value of the 'linkedTransactionLog' field.
   * @param value the value to set.
   */
  public void setLinkedTransactionLog(Long value) {
    this.linkedTransactionLog = value;
  }

  /**
   * Gets the value of the 'error' field.
   */
  public CharSequence getError() {
    return error;
  }

  /**
   * Sets the value of the 'error' field.
   * @param value the value to set.
   */
  public void setError(CharSequence value) {
    this.error = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   */
  public Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'emafS3Url' field.
   */
  public CharSequence getEmafS3Url() {
    return emafS3Url;
  }

  /**
   * Sets the value of the 'emafS3Url' field.
   * @param value the value to set.
   */
  public void setEmafS3Url(CharSequence value) {
    this.emafS3Url = value;
  }

  /** Creates a new StatusDetailsType RecordBuilder */
  public static StatusDetailsType.Builder newBuilder() {
    return new StatusDetailsType.Builder();
  }
  
  /** Creates a new StatusDetailsType RecordBuilder by copying an existing Builder */
  public static StatusDetailsType.Builder newBuilder(StatusDetailsType.Builder other) {
    return new StatusDetailsType.Builder(other);
  }
  
  /** Creates a new StatusDetailsType RecordBuilder by copying an existing StatusDetailsType instance */
  public static StatusDetailsType.Builder newBuilder(StatusDetailsType other) {
    return new StatusDetailsType.Builder(other);
  }
  
  /**
   * RecordBuilder for StatusDetailsType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StatusDetailsType>
    implements org.apache.avro.data.RecordBuilder<StatusDetailsType> {

    private Long id;
    private Integer transactionStatusType;
    private Integer transactionStatusStatus;
    private Long linkedTransactionLog;
    private CharSequence error;
    private Long timestamp;
    private CharSequence emafS3Url;

    /** Creates a new Builder */
    private Builder() {
      super(StatusDetailsType.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(StatusDetailsType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.transactionStatusType)) {
        this.transactionStatusType = data().deepCopy(fields()[1].schema(), other.transactionStatusType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.transactionStatusStatus)) {
        this.transactionStatusStatus = data().deepCopy(fields()[2].schema(), other.transactionStatusStatus);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.linkedTransactionLog)) {
        this.linkedTransactionLog = data().deepCopy(fields()[3].schema(), other.linkedTransactionLog);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.error)) {
        this.error = data().deepCopy(fields()[4].schema(), other.error);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[5].schema(), other.timestamp);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.emafS3Url)) {
        this.emafS3Url = data().deepCopy(fields()[6].schema(), other.emafS3Url);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing StatusDetailsType instance */
    private Builder(StatusDetailsType other) {
            super(StatusDetailsType.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.transactionStatusType)) {
        this.transactionStatusType = data().deepCopy(fields()[1].schema(), other.transactionStatusType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.transactionStatusStatus)) {
        this.transactionStatusStatus = data().deepCopy(fields()[2].schema(), other.transactionStatusStatus);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.linkedTransactionLog)) {
        this.linkedTransactionLog = data().deepCopy(fields()[3].schema(), other.linkedTransactionLog);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.error)) {
        this.error = data().deepCopy(fields()[4].schema(), other.error);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[5].schema(), other.timestamp);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.emafS3Url)) {
        this.emafS3Url = data().deepCopy(fields()[6].schema(), other.emafS3Url);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public Long getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public StatusDetailsType.Builder setId(Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public StatusDetailsType.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'transactionStatusType' field */
    public Integer getTransactionStatusType() {
      return transactionStatusType;
    }
    
    /** Sets the value of the 'transactionStatusType' field */
    public StatusDetailsType.Builder setTransactionStatusType(Integer value) {
      validate(fields()[1], value);
      this.transactionStatusType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'transactionStatusType' field has been set */
    public boolean hasTransactionStatusType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'transactionStatusType' field */
    public StatusDetailsType.Builder clearTransactionStatusType() {
      transactionStatusType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'transactionStatusStatus' field */
    public Integer getTransactionStatusStatus() {
      return transactionStatusStatus;
    }
    
    /** Sets the value of the 'transactionStatusStatus' field */
    public StatusDetailsType.Builder setTransactionStatusStatus(Integer value) {
      validate(fields()[2], value);
      this.transactionStatusStatus = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'transactionStatusStatus' field has been set */
    public boolean hasTransactionStatusStatus() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'transactionStatusStatus' field */
    public StatusDetailsType.Builder clearTransactionStatusStatus() {
      transactionStatusStatus = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'linkedTransactionLog' field */
    public Long getLinkedTransactionLog() {
      return linkedTransactionLog;
    }
    
    /** Sets the value of the 'linkedTransactionLog' field */
    public StatusDetailsType.Builder setLinkedTransactionLog(Long value) {
      validate(fields()[3], value);
      this.linkedTransactionLog = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'linkedTransactionLog' field has been set */
    public boolean hasLinkedTransactionLog() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'linkedTransactionLog' field */
    public StatusDetailsType.Builder clearLinkedTransactionLog() {
      linkedTransactionLog = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'error' field */
    public CharSequence getError() {
      return error;
    }
    
    /** Sets the value of the 'error' field */
    public StatusDetailsType.Builder setError(CharSequence value) {
      validate(fields()[4], value);
      this.error = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'error' field has been set */
    public boolean hasError() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'error' field */
    public StatusDetailsType.Builder clearError() {
      error = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public Long getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public StatusDetailsType.Builder setTimestamp(Long value) {
      validate(fields()[5], value);
      this.timestamp = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'timestamp' field */
    public StatusDetailsType.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'emafS3Url' field */
    public CharSequence getEmafS3Url() {
      return emafS3Url;
    }
    
    /** Sets the value of the 'emafS3Url' field */
    public StatusDetailsType.Builder setEmafS3Url(CharSequence value) {
      validate(fields()[6], value);
      this.emafS3Url = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'emafS3Url' field has been set */
    public boolean hasEmafS3Url() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'emafS3Url' field */
    public StatusDetailsType.Builder clearEmafS3Url() {
      emafS3Url = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public StatusDetailsType build() {
      try {
        StatusDetailsType record = new StatusDetailsType();
        record.id = fieldSetFlags()[0] ? this.id : (Long) defaultValue(fields()[0]);
        record.transactionStatusType = fieldSetFlags()[1] ? this.transactionStatusType : (Integer) defaultValue(fields()[1]);
        record.transactionStatusStatus = fieldSetFlags()[2] ? this.transactionStatusStatus : (Integer) defaultValue(fields()[2]);
        record.linkedTransactionLog = fieldSetFlags()[3] ? this.linkedTransactionLog : (Long) defaultValue(fields()[3]);
        record.error = fieldSetFlags()[4] ? this.error : (CharSequence) defaultValue(fields()[4]);
        record.timestamp = fieldSetFlags()[5] ? this.timestamp : (Long) defaultValue(fields()[5]);
        record.emafS3Url = fieldSetFlags()[6] ? this.emafS3Url : (CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
